// Generated by LiveScript 1.3.1
(function(it){
  return it();
})(function(){
  var Ctrl, host;
  Ctrl = function(){
    var this$ = this;
    this.view = new ldView({
      root: document.body,
      action: {
        click: {
          add: function(){
            this$.data.c++;
            return this$.opsOut(function(){
              return this$.data;
            });
          },
          disconnect: function(){
            return console.log('disconnected');
          }
        }
      },
      handler: {
        textarea: function(arg$){
          var node;
          node = arg$.node;
          return node.value = JSON.stringify(this$.data || '');
        }
      }
    });
    return this;
  };
  Ctrl.prototype = import$(import$(Object.create(Object.prototype), sdbAdapter['interface']), {
    update: function(){
      return this.view.render();
    }
  });
  host = new sdbHost({
    url: {
      scheme: 'http',
      domain: 'localhost:3005',
      path: '/ws'
    },
    id: 'sample'
  });
  return host.initSdb().then(function(){
    var ctrl;
    ctrl = new Ctrl();
    return ctrl.adapt({
      host: host,
      path: ['ctrl']
    });
  });
});
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}